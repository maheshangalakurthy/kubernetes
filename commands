--dry-run: By default as soon as the command run, the resource will be created. if you simply want to test you command, 
use --dry-run option.

-o yaml: This will output the resource definition in YAML format on the screen.

Create nginx pod:
 
 kubectl run nginx --image=nginx --restart=Never

Generate POD Manifest Yaml file (-o yaml) Don't Create

    kubectl run nginx --image=nginx --restart=Never --dry-run -o yaml

Deployment:
    kubectl create deployment nginx --image=nginx
    kubectl create deployment nginx --image=nginx --dry-run -o yaml

    Note: --generator=deployment doen't have a --replicas option.

    Save to a file
    kubectl create deployment nginx --image=nginx --dry-run -o yaml > nginx.yaml

Servic:
    kubectl expose pod redis --port=6379 --name redis-service --dry-run -o yaml
    or
    kubectl create servic clusterip redis --tcp=6379:6379 --dry-run -o yaml

Deploy POD:
    kubectl run nginx --image=nginx

list PODS
    kubectl get pods | po | pod

get Nodes:
    kubectl get nodes

Describe pods:
    kubectl describe pods
    kubectl describe pods -o wide

delete POD:
    kubectl delete pod <podname>

Create pod from Manifestfile
    kubectl create -f pod.yaml

List replication controllers:
    kubectl get rc | replicationcontroller
    kubectl describe rc | replicationcontroller

Delete RC:
    kubectl delete rc <rc-name>

Replicaset:
    kubectl get replicaset
    kubectl scale --replicas=5 replicaset <replicaset-name>
    kubectl delete replicaset <replicaset-name>

    update no of replicas to 6 in rc.yaml

        kubectl replace -f rs.yaml
    Scale down:
        kubectl scale --replicas=3 rs.yaml

Deployment:

    kubectl get deployment | deploy
    kubectl get all
    kubectl describe deployment

    Rollout Command:
        kubectl rollout status deployment/<deployment-name>
        kubectl rollout history <deployment-name>

    deployment Strategy 
        1. rolling update
        2. Recreate
    change the nginx version to 1.7.1 in existing deployment file
        kubectl apply -f dep.yaml
        or
        kubectl set image deployment/my-deployment nginx-container=nginx:1.9.1 // this is not changed in yaml file

    Roll back deployment:
        kubectl rollout undo deployment/my-deployment
        other way to deployment
        kubectl run nginx --image=nginx
    kubectl create -f deployment.yaml --record : can see revision and cause 

list pod in default namespace
    kubectl get pods

list pod in kube-system namespace
    kubectl get pods --namespace=kube-system

create pod in another namespace
    kubectl create -f pod.yml --namespace=dev

    kubectl get namespace | ns
create namespace
    kubectl create namespace dev

switch name to dev permentently
    kubectl config set-context $(kubectl config current-context) --namespace=dev

Get all pod in all namespaces
    kubectl get pods --all-namespaces

resources:
    kubectl get resourcequota mem-cpu-demo --namespace=dev


